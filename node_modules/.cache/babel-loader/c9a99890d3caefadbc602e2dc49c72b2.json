{"ast":null,"code":"import _slicedToArray from\"C:/Users/SharmiGnanasambandam/Documents/GitHub/emoji-interpretor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from\"react\";import\"./styles.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function App(){var fruitsDictionary={\"🍊\":\"Tangerine\",\"🍋\":\"Lemon\",\"🍍\":\"Pineapple\",\"🥭\":\"Mango\",\"🍎\":\"Red Apple\",\"🍏\":\"Green Apple\",\"🍐\":\"Pear\",\"🍑\":\"Peach\"};var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),fruitName=_useState2[0],setFruitName=_useState2[1];var keyList=Object.keys(fruitsDictionary);function callOnChangeEvent(event){var userInput=event.target.value;var outputKey=\"\";if(userInput in fruitsDictionary){outputKey=fruitsDictionary[userInput];}else{outputKey=Object.keys(fruitsDictionary).find(function(key){return fruitsDictionary[key]===userInput;});}if(userInput===\"\"){outputKey=\"\";}else{if(outputKey===undefined){outputKey=\"Not in database\";}}setFruitName(outputKey);}function emojiHandler(emoji){setFruitName(fruitsDictionary[emoji]);}return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"I like Fruits .. Do you ?\"}),/*#__PURE__*/_jsx(\"input\",{onChange:callOnChangeEvent,className:\"input\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"output\",children:[\" \",fruitName]}),/*#__PURE__*/_jsx(\"div\",{children:keyList.map(function(key){return/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"btn-emoji\",onClick:function onClick(){return emojiHandler(key);},children:key})});})})]});}","map":{"version":3,"sources":["C:/Users/SharmiGnanasambandam/Documents/GitHub/emoji-interpretor/src/App.js"],"names":["useState","App","fruitsDictionary","fruitName","setFruitName","keyList","Object","keys","callOnChangeEvent","event","userInput","target","value","outputKey","find","key","undefined","emojiHandler","emoji","map"],"mappings":"uLAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,MAAO,cAAP,C,wFAEA,cAAe,SAASC,CAAAA,GAAT,EAAe,CAC5B,GAAIC,CAAAA,gBAAgB,CAAG,CACrB,KAAM,WADe,CAErB,KAAM,OAFe,CAGrB,KAAM,WAHe,CAIrB,KAAM,OAJe,CAKrB,KAAM,WALe,CAMrB,KAAM,aANe,CAOrB,KAAM,MAPe,CAQrB,KAAM,OARe,CAAvB,CAWA,cAAgCF,QAAQ,CAAC,EAAD,CAAxC,wCAAKG,SAAL,eAAgBC,YAAhB,eACA,GAAMC,CAAAA,OAAO,CAAGC,MAAM,CAACC,IAAP,CAAYL,gBAAZ,CAAhB,CAEA,QAASM,CAAAA,iBAAT,CAA2BC,KAA3B,CAAkC,CAChC,GAAIC,CAAAA,SAAS,CAAGD,KAAK,CAACE,MAAN,CAAaC,KAA7B,CACA,GAAIC,CAAAA,SAAS,CAAG,EAAhB,CAEA,GAAIH,SAAS,GAAIR,CAAAA,gBAAjB,CAAmC,CACjCW,SAAS,CAAGX,gBAAgB,CAACQ,SAAD,CAA5B,CACD,CAFD,IAEO,CACLG,SAAS,CAAGP,MAAM,CAACC,IAAP,CAAYL,gBAAZ,EAA8BY,IAA9B,CACV,SAACC,GAAD,QAASb,CAAAA,gBAAgB,CAACa,GAAD,CAAhB,GAA0BL,SAAnC,EADU,CAAZ,CAGD,CACD,GAAIA,SAAS,GAAK,EAAlB,CAAsB,CACpBG,SAAS,CAAG,EAAZ,CACD,CAFD,IAEO,CACL,GAAIA,SAAS,GAAKG,SAAlB,CAA6B,CAC3BH,SAAS,CAAG,iBAAZ,CACD,CACF,CACDT,YAAY,CAACS,SAAD,CAAZ,CACD,CAED,QAASI,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,CAC3Bd,YAAY,CAACF,gBAAgB,CAACgB,KAAD,CAAjB,CAAZ,CACD,CAED,mBACE,aAAK,SAAS,CAAC,KAAf,wBACE,iDADF,cAEE,cAAO,QAAQ,CAAEV,iBAAjB,CAAoC,SAAS,CAAC,OAA9C,EAFF,cAGE,aAAK,SAAS,CAAC,QAAf,eAA0BL,SAA1B,GAHF,cAIE,qBACGE,OAAO,CAACc,GAAR,CAAY,SAACJ,GAAD,CAAS,CACpB,mBACE,iCACE,eAAQ,SAAS,CAAC,WAAlB,CAA8B,OAAO,CAAE,yBAAME,CAAAA,YAAY,CAACF,GAAD,CAAlB,EAAvC,UACGA,GADH,EADF,EADF,CAOD,CARA,CADH,EAJF,GADF,CAkBD","sourcesContent":["import { useState } from \"react\";\r\nimport \"./styles.css\";\r\n\r\nexport default function App() {\r\n  var fruitsDictionary = {\r\n    \"🍊\": \"Tangerine\",\r\n    \"🍋\": \"Lemon\",\r\n    \"🍍\": \"Pineapple\",\r\n    \"🥭\": \"Mango\",\r\n    \"🍎\": \"Red Apple\",\r\n    \"🍏\": \"Green Apple\",\r\n    \"🍐\": \"Pear\",\r\n    \"🍑\": \"Peach\"\r\n  };\r\n\r\n  var [fruitName, setFruitName] = useState(\"\");\r\n  const keyList = Object.keys(fruitsDictionary);\r\n\r\n  function callOnChangeEvent(event) {\r\n    var userInput = event.target.value;\r\n    var outputKey = \"\";\r\n\r\n    if (userInput in fruitsDictionary) {\r\n      outputKey = fruitsDictionary[userInput];\r\n    } else {\r\n      outputKey = Object.keys(fruitsDictionary).find(\r\n        (key) => fruitsDictionary[key] === userInput\r\n      );\r\n    }\r\n    if (userInput === \"\") {\r\n      outputKey = \"\";\r\n    } else {\r\n      if (outputKey === undefined) {\r\n        outputKey = \"Not in database\";\r\n      }\r\n    }\r\n    setFruitName(outputKey);\r\n  }\r\n\r\n  function emojiHandler(emoji) {\r\n    setFruitName(fruitsDictionary[emoji]);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>I like Fruits .. Do you ?</h1>\r\n      <input onChange={callOnChangeEvent} className=\"input\" />\r\n      <div className=\"output\"> {fruitName}</div>\r\n      <div>\r\n        {keyList.map((key) => {\r\n          return (\r\n            <li>\r\n              <button className=\"btn-emoji\" onClick={() => emojiHandler(key)}>\r\n                {key}\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}